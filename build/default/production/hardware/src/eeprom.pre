
# 1 "hardware/src/eeprom.c"

# 3 "hardware/src/../inc/eeprom.h"
void EEEPROM_Password_Init(void);
void EEPROM_Write_Byte(unsigned char addr,unsigned char data);
unsigned char EEPROM_Read_Byte(unsigned char add);

# 12 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\stdio.h"
typedef int ptrdiff_t;
typedef unsigned size_t;
typedef unsigned short wchar_t;

# 31 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\stdarg.h"
typedef void * va_list[1];

#pragma inline(__va_start)
extern void * __va_start(void);

#pragma inline(__va_arg)
extern void * __va_arg(void *, ...);

# 27 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\stdio.h"
extern int errno;

# 58
struct __prbuf
{
char * ptr;
void (* func)(char);
};

# 17 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\conio.h"
extern int errno;


extern void init_uart(void);

extern char getch(void);
extern char getche(void);
extern void putch(char);
extern void ungetch(char);

extern bit kbhit(void);

# 31
extern char * cgets(char *);
extern void cputs(const char *);

# 103 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\stdio.h"
extern int cprintf(char *, ...);
#pragma printf_check(cprintf)



extern int _doprnt(struct __prbuf *, const register char *, register va_list);

# 195
extern char * gets(char *);
extern int puts(const char *);
extern int scanf(const char *, ...);
extern int sscanf(const char *, const char *, ...);
extern int vprintf(const char *, va_list);
extern int vsprintf(char *, const char *, va_list);
extern int vscanf(const char *, va_list ap);
extern int vsscanf(const char *, const char *, va_list);

#pragma printf_check(printf) const
#pragma printf_check(sprintf) const
extern int sprintf(char *, const char *, ...);
extern int printf(const char *, ...);

# 27 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\stdlib.h"
typedef struct {
int rem;
int quot;
} div_t;
typedef struct {
unsigned rem;
unsigned quot;
} udiv_t;
typedef struct {
long quot;
long rem;
} ldiv_t;
typedef struct {
unsigned long quot;
unsigned long rem;
} uldiv_t;

# 65
extern double atof(const char *);
extern double strtod(const char *, const char **);
extern int atoi(const char *);
extern unsigned xtoi(const char *);
extern long atol(const char *);
extern long strtol(const char *, char **, int);

extern int rand(void);
extern void srand(unsigned int);
extern void * calloc(size_t, size_t);
extern div_t div(int numer, int denom);
extern udiv_t udiv(unsigned numer, unsigned denom);
extern ldiv_t ldiv(long numer, long denom);
extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
extern unsigned long _lrotl(unsigned long value, unsigned int shift);
extern unsigned long _lrotr(unsigned long value, unsigned int shift);
extern unsigned int _rotl(unsigned int value, unsigned int shift);
extern unsigned int _rotr(unsigned int value, unsigned int shift);

# 106
extern void * malloc(size_t);
extern void free(void *);
extern void * realloc(void *, size_t);

# 122
extern void abort(void);
extern void exit(int);
extern int atexit(void (*)(void));
extern char * getenv(const char *);
extern char ** environ;
extern int system(char *);
extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
extern int abs(int);
extern long labs(long);

# 145
extern char * itoa(char * buf, int val, int base);
extern char * utoa(char * buf, unsigned val, int base);
extern char * ltoa(char * buf, long val, int base);
extern char * ultoa(char * buf, unsigned long val, int base);

# 90 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\pic16f684.h"
volatile unsigned char INDF @ 0x000;



volatile unsigned char TMR0 @ 0x001;



volatile unsigned char PCL @ 0x002;



volatile unsigned char STATUS @ 0x003;

volatile bit CARRY @ ((unsigned)&STATUS*8)+0;
volatile bit DC @ ((unsigned)&STATUS*8)+1;
volatile bit ZERO @ ((unsigned)&STATUS*8)+2;
volatile bit nPD @ ((unsigned)&STATUS*8)+3;
volatile bit nTO @ ((unsigned)&STATUS*8)+4;
volatile bit IRP @ ((unsigned)&STATUS*8)+7;
volatile bit RP0 @ ((unsigned)&STATUS*8)+5;
volatile bit RP1 @ ((unsigned)&STATUS*8)+6;

volatile union {
struct {
unsigned C : 1;
unsigned DC : 1;
unsigned Z : 1;
unsigned nPD : 1;
unsigned nTO : 1;
unsigned RP : 2;
unsigned IRP : 1;
};
struct {
unsigned : 5;
unsigned RP0 : 1;
unsigned RP1 : 1;
};
} STATUSbits @ 0x003;



volatile unsigned char FSR @ 0x004;



volatile unsigned char PORTA @ 0x005;

volatile bit RA0 @ ((unsigned)&PORTA*8)+0;
volatile bit RA1 @ ((unsigned)&PORTA*8)+1;
volatile bit RA2 @ ((unsigned)&PORTA*8)+2;
volatile bit RA3 @ ((unsigned)&PORTA*8)+3;
volatile bit RA4 @ ((unsigned)&PORTA*8)+4;
volatile bit RA5 @ ((unsigned)&PORTA*8)+5;

volatile union {
struct {
unsigned RA0 : 1;
unsigned RA1 : 1;
unsigned RA2 : 1;
unsigned RA3 : 1;
unsigned RA4 : 1;
unsigned RA5 : 1;
};
} PORTAbits @ 0x005;



volatile unsigned char PORTC @ 0x007;

volatile bit RC0 @ ((unsigned)&PORTC*8)+0;
volatile bit RC1 @ ((unsigned)&PORTC*8)+1;
volatile bit RC2 @ ((unsigned)&PORTC*8)+2;
volatile bit RC3 @ ((unsigned)&PORTC*8)+3;
volatile bit RC4 @ ((unsigned)&PORTC*8)+4;
volatile bit RC5 @ ((unsigned)&PORTC*8)+5;

volatile union {
struct {
unsigned RC0 : 1;
unsigned RC1 : 1;
unsigned RC2 : 1;
unsigned RC3 : 1;
unsigned RC4 : 1;
unsigned RC5 : 1;
};
} PORTCbits @ 0x007;



volatile unsigned char PCLATH @ 0x00A;


volatile union {
struct {
unsigned PCLATH : 5;
};
} PCLATHbits @ 0x00A;



volatile unsigned char INTCON @ 0x00B;

volatile bit RAIF @ ((unsigned)&INTCON*8)+0;
volatile bit INTF @ ((unsigned)&INTCON*8)+1;
volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
volatile bit RAIE @ ((unsigned)&INTCON*8)+3;
volatile bit INTE @ ((unsigned)&INTCON*8)+4;
volatile bit T0IE @ ((unsigned)&INTCON*8)+5;
volatile bit PEIE @ ((unsigned)&INTCON*8)+6;
volatile bit GIE @ ((unsigned)&INTCON*8)+7;
volatile bit TMR0IF @ ((unsigned)&INTCON*8)+2;
volatile bit TMR0IE @ ((unsigned)&INTCON*8)+5;

volatile union {
struct {
unsigned RAIF : 1;
unsigned INTF : 1;
unsigned T0IF : 1;
unsigned RAIE : 1;
unsigned INTE : 1;
unsigned T0IE : 1;
unsigned PEIE : 1;
unsigned GIE : 1;
};
struct {
unsigned : 2;
unsigned TMR0IF : 1;
unsigned : 2;
unsigned TMR0IE : 1;
};
} INTCONbits @ 0x00B;



volatile unsigned char PIR1 @ 0x00C;

volatile bit TMR1IF @ ((unsigned)&PIR1*8)+0;
volatile bit TMR2IF @ ((unsigned)&PIR1*8)+1;
volatile bit OSFIF @ ((unsigned)&PIR1*8)+2;
volatile bit C1IF @ ((unsigned)&PIR1*8)+3;
volatile bit C2IF @ ((unsigned)&PIR1*8)+4;
volatile bit CCP1IF @ ((unsigned)&PIR1*8)+5;
volatile bit ADIF @ ((unsigned)&PIR1*8)+6;
volatile bit EEIF @ ((unsigned)&PIR1*8)+7;
volatile bit T1IF @ ((unsigned)&PIR1*8)+0;
volatile bit T2IF @ ((unsigned)&PIR1*8)+1;
volatile bit ECCPIF @ ((unsigned)&PIR1*8)+5;

volatile union {
struct {
unsigned TMR1IF : 1;
unsigned TMR2IF : 1;
unsigned OSFIF : 1;
unsigned C1IF : 1;
unsigned C2IF : 1;
unsigned CCP1IF : 1;
unsigned ADIF : 1;
unsigned EEIF : 1;
};
struct {
unsigned T1IF : 1;
unsigned T2IF : 1;
unsigned : 3;
unsigned ECCPIF : 1;
};
} PIR1bits @ 0x00C;




volatile unsigned char TMR1L @ 0x00E;



volatile unsigned char TMR1H @ 0x00F;



volatile unsigned int TMR1 @ 0x00E;


volatile unsigned char T1CON @ 0x010;

volatile bit TMR1ON @ ((unsigned)&T1CON*8)+0;
volatile bit TMR1CS @ ((unsigned)&T1CON*8)+1;
volatile bit nT1SYNC @ ((unsigned)&T1CON*8)+2;
volatile bit T1OSCEN @ ((unsigned)&T1CON*8)+3;
volatile bit TMR1GE @ ((unsigned)&T1CON*8)+6;
volatile bit T1GINV @ ((unsigned)&T1CON*8)+7;
volatile bit T1CKPS0 @ ((unsigned)&T1CON*8)+4;
volatile bit T1CKPS1 @ ((unsigned)&T1CON*8)+5;

volatile union {
struct {
unsigned TMR1ON : 1;
unsigned TMR1CS : 1;
unsigned nT1SYNC : 1;
unsigned T1OSCEN : 1;
unsigned T1CKPS : 2;
unsigned TMR1GE : 1;
unsigned T1GINV : 1;
};
struct {
unsigned : 4;
unsigned T1CKPS0 : 1;
unsigned T1CKPS1 : 1;
};
} T1CONbits @ 0x010;



volatile unsigned char TMR2 @ 0x011;



volatile unsigned char T2CON @ 0x012;

volatile bit TMR2ON @ ((unsigned)&T2CON*8)+2;
volatile bit T2CKPS0 @ ((unsigned)&T2CON*8)+0;
volatile bit T2CKPS1 @ ((unsigned)&T2CON*8)+1;
volatile bit TOUTPS0 @ ((unsigned)&T2CON*8)+3;
volatile bit TOUTPS1 @ ((unsigned)&T2CON*8)+4;
volatile bit TOUTPS2 @ ((unsigned)&T2CON*8)+5;
volatile bit TOUTPS3 @ ((unsigned)&T2CON*8)+6;

volatile union {
struct {
unsigned T2CKPS : 2;
unsigned TMR2ON : 1;
unsigned TOUTPS : 4;
};
struct {
unsigned T2CKPS0 : 1;
unsigned T2CKPS1 : 1;
unsigned : 1;
unsigned TOUTPS0 : 1;
unsigned TOUTPS1 : 1;
unsigned TOUTPS2 : 1;
unsigned TOUTPS3 : 1;
};
} T2CONbits @ 0x012;




volatile unsigned char CCPR1L @ 0x013;



volatile unsigned char CCPR1H @ 0x014;



volatile unsigned int CCPR1 @ 0x013;


volatile unsigned char CCP1CON @ 0x015;

volatile bit CCP1M0 @ ((unsigned)&CCP1CON*8)+0;
volatile bit CCP1M1 @ ((unsigned)&CCP1CON*8)+1;
volatile bit CCP1M2 @ ((unsigned)&CCP1CON*8)+2;
volatile bit CCP1M3 @ ((unsigned)&CCP1CON*8)+3;
volatile bit DC1B0 @ ((unsigned)&CCP1CON*8)+4;
volatile bit DC1B1 @ ((unsigned)&CCP1CON*8)+5;
volatile bit P1M0 @ ((unsigned)&CCP1CON*8)+6;
volatile bit P1M1 @ ((unsigned)&CCP1CON*8)+7;

volatile union {
struct {
unsigned CCP1M : 4;
unsigned DCB : 2;
unsigned PM : 2;
};
struct {
unsigned CCP1M0 : 1;
unsigned CCP1M1 : 1;
unsigned CCP1M2 : 1;
unsigned CCP1M3 : 1;
unsigned DC1B0 : 1;
unsigned DC1B1 : 1;
unsigned P1M0 : 1;
unsigned P1M1 : 1;
};
} CCP1CONbits @ 0x015;



volatile unsigned char PWM1CON @ 0x016;

volatile bit PRSEN @ ((unsigned)&PWM1CON*8)+7;
volatile bit PDC0 @ ((unsigned)&PWM1CON*8)+0;
volatile bit PDC1 @ ((unsigned)&PWM1CON*8)+1;
volatile bit PDC2 @ ((unsigned)&PWM1CON*8)+2;
volatile bit PDC3 @ ((unsigned)&PWM1CON*8)+3;
volatile bit PDC4 @ ((unsigned)&PWM1CON*8)+4;
volatile bit PDC5 @ ((unsigned)&PWM1CON*8)+5;
volatile bit PDC6 @ ((unsigned)&PWM1CON*8)+6;

volatile union {
struct {
unsigned PDC : 7;
unsigned PRSEN : 1;
};
struct {
unsigned PDC0 : 1;
unsigned PDC1 : 1;
unsigned PDC2 : 1;
unsigned PDC3 : 1;
unsigned PDC4 : 1;
unsigned PDC5 : 1;
unsigned PDC6 : 1;
};
} PWM1CONbits @ 0x016;



volatile unsigned char ECCPAS @ 0x017;

volatile bit ECCPASE @ ((unsigned)&ECCPAS*8)+7;
volatile bit PSSBD0 @ ((unsigned)&ECCPAS*8)+0;
volatile bit PSSBD1 @ ((unsigned)&ECCPAS*8)+1;
volatile bit PSSAC0 @ ((unsigned)&ECCPAS*8)+2;
volatile bit PSSAC1 @ ((unsigned)&ECCPAS*8)+3;
volatile bit ECCPAS0 @ ((unsigned)&ECCPAS*8)+4;
volatile bit ECCPAS1 @ ((unsigned)&ECCPAS*8)+5;
volatile bit ECCPAS2 @ ((unsigned)&ECCPAS*8)+6;

volatile union {
struct {
unsigned PSSBD : 2;
unsigned PSSAC : 2;
unsigned ECCPAS : 3;
unsigned ECCPASE : 1;
};
struct {
unsigned PSSBD0 : 1;
unsigned PSSBD1 : 1;
unsigned PSSAC0 : 1;
unsigned PSSAC1 : 1;
unsigned ECCPAS0 : 1;
unsigned ECCPAS1 : 1;
unsigned ECCPAS2 : 1;
};
} ECCPASbits @ 0x017;



volatile unsigned char WDTCON @ 0x018;

volatile bit SWDTEN @ ((unsigned)&WDTCON*8)+0;
volatile bit WDTPS0 @ ((unsigned)&WDTCON*8)+1;
volatile bit WDTPS1 @ ((unsigned)&WDTCON*8)+2;
volatile bit WDTPS2 @ ((unsigned)&WDTCON*8)+3;
volatile bit WDTPS3 @ ((unsigned)&WDTCON*8)+4;

volatile union {
struct {
unsigned SWDTEN : 1;
unsigned WDTPS : 4;
};
struct {
unsigned : 1;
unsigned WDTPS0 : 1;
unsigned WDTPS1 : 1;
unsigned WDTPS2 : 1;
unsigned WDTPS3 : 1;
};
} WDTCONbits @ 0x018;



volatile unsigned char CMCON0 @ 0x019;

volatile bit CIS @ ((unsigned)&CMCON0*8)+3;
volatile bit C1INV @ ((unsigned)&CMCON0*8)+4;
volatile bit C2INV @ ((unsigned)&CMCON0*8)+5;
volatile bit C1OUT @ ((unsigned)&CMCON0*8)+6;
volatile bit C2OUT @ ((unsigned)&CMCON0*8)+7;
volatile bit CM0 @ ((unsigned)&CMCON0*8)+0;
volatile bit CM1 @ ((unsigned)&CMCON0*8)+1;
volatile bit CM2 @ ((unsigned)&CMCON0*8)+2;

volatile union {
struct {
unsigned CM : 3;
unsigned CIS : 1;
unsigned C1INV : 1;
unsigned C2INV : 1;
unsigned C1OUT : 1;
unsigned C2OUT : 1;
};
struct {
unsigned CM0 : 1;
unsigned CM1 : 1;
unsigned CM2 : 1;
};
} CMCON0bits @ 0x019;



volatile unsigned char CMCON1 @ 0x01A;

volatile bit C2SYNC @ ((unsigned)&CMCON1*8)+0;
volatile bit T1GSS @ ((unsigned)&CMCON1*8)+1;

volatile union {
struct {
unsigned C2SYNC : 1;
unsigned T1GSS : 1;
};
} CMCON1bits @ 0x01A;



volatile unsigned char ADRESH @ 0x01E;



volatile unsigned char ADCON0 @ 0x01F;

volatile bit ADON @ ((unsigned)&ADCON0*8)+0;
volatile bit GO_nDONE @ ((unsigned)&ADCON0*8)+1;
volatile bit VCFG @ ((unsigned)&ADCON0*8)+6;
volatile bit ADFM @ ((unsigned)&ADCON0*8)+7;
volatile bit GO @ ((unsigned)&ADCON0*8)+1;
volatile bit CHS0 @ ((unsigned)&ADCON0*8)+2;
volatile bit CHS1 @ ((unsigned)&ADCON0*8)+3;
volatile bit CHS2 @ ((unsigned)&ADCON0*8)+4;
volatile bit nDONE @ ((unsigned)&ADCON0*8)+1;
volatile bit GO_DONE @ ((unsigned)&ADCON0*8)+1;

volatile union {
struct {
unsigned ADON : 1;
unsigned GO_nDONE : 1;
unsigned CHS : 3;
unsigned : 1;
unsigned VCFG : 1;
unsigned ADFM : 1;
};
struct {
unsigned : 1;
unsigned : 1;
unsigned : 3;
unsigned : 1;
unsigned : 1;
unsigned : 1;
};
struct {
unsigned : 1;
unsigned GO : 1;
unsigned CHS0 : 1;
unsigned CHS1 : 1;
unsigned CHS2 : 1;
};
struct {
unsigned : 1;
unsigned nDONE : 1;
};
struct {
unsigned : 1;
unsigned GO_DONE : 1;
};
} ADCON0bits @ 0x01F;

# 563
volatile unsigned char OPTION_REG @ 0x081;

volatile bit PSA @ ((unsigned)&OPTION_REG*8)+3;
volatile bit T0SE @ ((unsigned)&OPTION_REG*8)+4;
volatile bit T0CS @ ((unsigned)&OPTION_REG*8)+5;
volatile bit INTEDG @ ((unsigned)&OPTION_REG*8)+6;
volatile bit nRAPU @ ((unsigned)&OPTION_REG*8)+7;
volatile bit PS0 @ ((unsigned)&OPTION_REG*8)+0;
volatile bit PS1 @ ((unsigned)&OPTION_REG*8)+1;
volatile bit PS2 @ ((unsigned)&OPTION_REG*8)+2;

volatile union {
struct {
unsigned PS : 3;
unsigned PSA : 1;
unsigned T0SE : 1;
unsigned T0CS : 1;
unsigned INTEDG : 1;
unsigned nRAPU : 1;
};
struct {
unsigned PS0 : 1;
unsigned PS1 : 1;
unsigned PS2 : 1;
};
} OPTION_REGbits @ 0x081;



volatile unsigned char TRISA @ 0x085;

volatile bit TRISA0 @ ((unsigned)&TRISA*8)+0;
volatile bit TRISA1 @ ((unsigned)&TRISA*8)+1;
volatile bit TRISA2 @ ((unsigned)&TRISA*8)+2;
volatile bit TRISA3 @ ((unsigned)&TRISA*8)+3;
volatile bit TRISA4 @ ((unsigned)&TRISA*8)+4;
volatile bit TRISA5 @ ((unsigned)&TRISA*8)+5;

volatile union {
struct {
unsigned TRISA0 : 1;
unsigned TRISA1 : 1;
unsigned TRISA2 : 1;
unsigned TRISA3 : 1;
unsigned TRISA4 : 1;
unsigned TRISA5 : 1;
};
} TRISAbits @ 0x085;



volatile unsigned char TRISC @ 0x087;

volatile bit TRISC0 @ ((unsigned)&TRISC*8)+0;
volatile bit TRISC1 @ ((unsigned)&TRISC*8)+1;
volatile bit TRISC2 @ ((unsigned)&TRISC*8)+2;
volatile bit TRISC3 @ ((unsigned)&TRISC*8)+3;
volatile bit TRISC4 @ ((unsigned)&TRISC*8)+4;
volatile bit TRISC5 @ ((unsigned)&TRISC*8)+5;

volatile union {
struct {
unsigned TRISC0 : 1;
unsigned TRISC1 : 1;
unsigned TRISC2 : 1;
unsigned TRISC3 : 1;
unsigned TRISC4 : 1;
unsigned TRISC5 : 1;
};
} TRISCbits @ 0x087;



volatile unsigned char PIE1 @ 0x08C;

volatile bit TMR1IE @ ((unsigned)&PIE1*8)+0;
volatile bit TMR2IE @ ((unsigned)&PIE1*8)+1;
volatile bit OSFIE @ ((unsigned)&PIE1*8)+2;
volatile bit C1IE @ ((unsigned)&PIE1*8)+3;
volatile bit C2IE @ ((unsigned)&PIE1*8)+4;
volatile bit CCP1IE @ ((unsigned)&PIE1*8)+5;
volatile bit ADIE @ ((unsigned)&PIE1*8)+6;
volatile bit EEIE @ ((unsigned)&PIE1*8)+7;
volatile bit T1IE @ ((unsigned)&PIE1*8)+0;
volatile bit T2IE @ ((unsigned)&PIE1*8)+1;
volatile bit ECCPIE @ ((unsigned)&PIE1*8)+5;

volatile union {
struct {
unsigned TMR1IE : 1;
unsigned TMR2IE : 1;
unsigned OSFIE : 1;
unsigned C1IE : 1;
unsigned C2IE : 1;
unsigned CCP1IE : 1;
unsigned ADIE : 1;
unsigned EEIE : 1;
};
struct {
unsigned T1IE : 1;
unsigned T2IE : 1;
unsigned : 3;
unsigned ECCPIE : 1;
};
} PIE1bits @ 0x08C;



volatile unsigned char PCON @ 0x08E;

volatile bit nBOR @ ((unsigned)&PCON*8)+0;
volatile bit nPOR @ ((unsigned)&PCON*8)+1;
volatile bit SBOREN @ ((unsigned)&PCON*8)+4;
volatile bit ULPWUE @ ((unsigned)&PCON*8)+5;
volatile bit nBOD @ ((unsigned)&PCON*8)+0;
volatile bit SBODEN @ ((unsigned)&PCON*8)+4;

volatile union {
struct {
unsigned nBOR : 1;
unsigned nPOR : 1;
unsigned : 2;
unsigned SBOREN : 1;
unsigned ULPWUE : 1;
};
struct {
unsigned nBOD : 1;
unsigned : 3;
unsigned SBODEN : 1;
};
} PCONbits @ 0x08E;



volatile unsigned char OSCCON @ 0x08F;

volatile bit SCS @ ((unsigned)&OSCCON*8)+0;
volatile bit LTS @ ((unsigned)&OSCCON*8)+1;
volatile bit HTS @ ((unsigned)&OSCCON*8)+2;
volatile bit OSTS @ ((unsigned)&OSCCON*8)+3;
volatile bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
volatile bit IRCF1 @ ((unsigned)&OSCCON*8)+5;
volatile bit IRCF2 @ ((unsigned)&OSCCON*8)+6;

volatile union {
struct {
unsigned SCS : 1;
unsigned LTS : 1;
unsigned HTS : 1;
unsigned OSTS : 1;
unsigned IOSCF : 3;
};
struct {
unsigned : 4;
unsigned IRCF0 : 1;
unsigned IRCF1 : 1;
unsigned IRCF2 : 1;
};
} OSCCONbits @ 0x08F;



volatile unsigned char OSCTUNE @ 0x090;

volatile bit TUN0 @ ((unsigned)&OSCTUNE*8)+0;
volatile bit TUN1 @ ((unsigned)&OSCTUNE*8)+1;
volatile bit TUN2 @ ((unsigned)&OSCTUNE*8)+2;
volatile bit TUN3 @ ((unsigned)&OSCTUNE*8)+3;
volatile bit TUN4 @ ((unsigned)&OSCTUNE*8)+4;

volatile union {
struct {
unsigned TUN : 5;
};
struct {
unsigned TUN0 : 1;
unsigned TUN1 : 1;
unsigned TUN2 : 1;
unsigned TUN3 : 1;
unsigned TUN4 : 1;
};
} OSCTUNEbits @ 0x090;



volatile unsigned char ANSEL @ 0x091;

volatile bit ANS0 @ ((unsigned)&ANSEL*8)+0;
volatile bit ANS1 @ ((unsigned)&ANSEL*8)+1;
volatile bit ANS2 @ ((unsigned)&ANSEL*8)+2;
volatile bit ANS3 @ ((unsigned)&ANSEL*8)+3;
volatile bit ANS4 @ ((unsigned)&ANSEL*8)+4;
volatile bit ANS5 @ ((unsigned)&ANSEL*8)+5;
volatile bit ANS6 @ ((unsigned)&ANSEL*8)+6;
volatile bit ANS7 @ ((unsigned)&ANSEL*8)+7;

volatile union {
struct {
unsigned ANS0 : 1;
unsigned ANS1 : 1;
unsigned ANS2 : 1;
unsigned ANS3 : 1;
unsigned ANS4 : 1;
unsigned ANS5 : 1;
unsigned ANS6 : 1;
unsigned ANS7 : 1;
};
} ANSELbits @ 0x091;



volatile unsigned char PR2 @ 0x092;



volatile unsigned char WPUA @ 0x095;
volatile unsigned char WPU @ 0x095;

volatile bit WPUA0 @ ((unsigned)&WPUA*8)+0;
volatile bit WPUA1 @ ((unsigned)&WPUA*8)+1;
volatile bit WPUA2 @ ((unsigned)&WPUA*8)+2;
volatile bit WPUA4 @ ((unsigned)&WPUA*8)+4;
volatile bit WPUA5 @ ((unsigned)&WPUA*8)+5;
volatile bit WPU0 @ ((unsigned)&WPUA*8)+0;
volatile bit WPU1 @ ((unsigned)&WPUA*8)+1;
volatile bit WPU2 @ ((unsigned)&WPUA*8)+2;
volatile bit WPU4 @ ((unsigned)&WPUA*8)+4;
volatile bit WPU5 @ ((unsigned)&WPUA*8)+5;

volatile union {
struct {
unsigned WPUA0 : 1;
unsigned WPUA1 : 1;
unsigned WPUA2 : 1;
unsigned : 1;
unsigned WPUA4 : 1;
unsigned WPUA5 : 1;
};
struct {
unsigned WPU0 : 1;
unsigned WPU1 : 1;
unsigned WPU2 : 1;
unsigned : 1;
unsigned WPU4 : 1;
unsigned WPU5 : 1;
};
} WPUAbits @ 0x095;



volatile unsigned char IOCA @ 0x096;
volatile unsigned char IOC @ 0x096;

volatile bit IOCA0 @ ((unsigned)&IOCA*8)+0;
volatile bit IOCA1 @ ((unsigned)&IOCA*8)+1;
volatile bit IOCA2 @ ((unsigned)&IOCA*8)+2;
volatile bit IOCA3 @ ((unsigned)&IOCA*8)+3;
volatile bit IOCA4 @ ((unsigned)&IOCA*8)+4;
volatile bit IOCA5 @ ((unsigned)&IOCA*8)+5;
volatile bit IOC0 @ ((unsigned)&IOCA*8)+0;
volatile bit IOC1 @ ((unsigned)&IOCA*8)+1;
volatile bit IOC2 @ ((unsigned)&IOCA*8)+2;
volatile bit IOC3 @ ((unsigned)&IOCA*8)+3;
volatile bit IOC4 @ ((unsigned)&IOCA*8)+4;
volatile bit IOC5 @ ((unsigned)&IOCA*8)+5;

volatile union {
struct {
unsigned IOCA0 : 1;
unsigned IOCA1 : 1;
unsigned IOCA2 : 1;
unsigned IOCA3 : 1;
unsigned IOCA4 : 1;
unsigned IOCA5 : 1;
};
struct {
unsigned IOC0 : 1;
unsigned IOC1 : 1;
unsigned IOC2 : 1;
unsigned IOC3 : 1;
unsigned IOC4 : 1;
unsigned IOC5 : 1;
};
} IOCAbits @ 0x096;



volatile unsigned char VRCON @ 0x099;

volatile bit VRR @ ((unsigned)&VRCON*8)+5;
volatile bit VREN @ ((unsigned)&VRCON*8)+7;
volatile bit VR0 @ ((unsigned)&VRCON*8)+0;
volatile bit VR1 @ ((unsigned)&VRCON*8)+1;
volatile bit VR2 @ ((unsigned)&VRCON*8)+2;
volatile bit VR3 @ ((unsigned)&VRCON*8)+3;

volatile union {
struct {
unsigned VR : 4;
unsigned : 1;
unsigned VRR : 1;
unsigned : 1;
unsigned VREN : 1;
};
struct {
unsigned VR0 : 1;
unsigned VR1 : 1;
unsigned VR2 : 1;
unsigned VR3 : 1;
};
} VRCONbits @ 0x099;



volatile unsigned char EEDAT @ 0x09A;
volatile unsigned char EEDATA @ 0x09A;



volatile unsigned char EEADR @ 0x09B;



volatile unsigned char EECON1 @ 0x09C;

volatile bit RD @ ((unsigned)&EECON1*8)+0;
volatile bit WR @ ((unsigned)&EECON1*8)+1;
volatile bit WREN @ ((unsigned)&EECON1*8)+2;
volatile bit WRERR @ ((unsigned)&EECON1*8)+3;

volatile union {
struct {
unsigned RD : 1;
unsigned WR : 1;
unsigned WREN : 1;
unsigned WRERR : 1;
};
} EECON1bits @ 0x09C;



volatile unsigned char EECON2 @ 0x09D;



volatile unsigned char ADRESL @ 0x09E;



volatile unsigned char ADCON1 @ 0x09F;

volatile bit ADCS0 @ ((unsigned)&ADCON1*8)+4;
volatile bit ADCS1 @ ((unsigned)&ADCON1*8)+5;
volatile bit ADCS2 @ ((unsigned)&ADCON1*8)+6;

volatile union {
struct {
unsigned : 4;
unsigned ADCS : 3;
};
struct {
unsigned : 4;
unsigned ADCS0 : 1;
unsigned ADCS1 : 1;
unsigned ADCS2 : 1;
};
} ADCON1bits @ 0x09F;


# 27 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\pic.h"
#pragma inline(_nop)
extern void _nop(void);

# 80
extern unsigned int flash_read(unsigned short addr);

# 41 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\eeprom_routines.h"
extern unsigned char eeprom_write(unsigned char addr, unsigned char value);
extern unsigned char eeprom_read(unsigned char addr);
extern void eecpymem(volatile unsigned char *to, eeprom unsigned char *from, unsigned char size);
extern void memcpyee(eeprom unsigned char *to, const unsigned char *from, unsigned char size);


# 153 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\pic.h"
#pragma inline(_delay)
extern void _delay(unsigned long);

# 11 "hardware/src/../../hardware/inc/buzzer.h"
void BUZZER_Init(void);


void BUZZER_KeySound(void);

void PlayMusi_Buzzer(void);
void Buzzer_LongSound(void);

# 83 "hardware/src/../../hardware/inc/key.h"
extern unsigned char SC_Data[2];


typedef enum
{
UNDONE = 0x00,
DONE = 0x01
}Complete_Status;


typedef enum
{
SPECIAL_1 =0x4000,KEY_1=0x1000, KEY_2=0x400, KEY_3=0x100, KEY_4=0x40, KEY_5=0x10,
KEY_6= 0x8000, KEY_7=0x2000, KEY_8=0x800, KEY_9=0x200, KEY_0=0x80, SPECIAL_2=0x20

}TouchKey_Numbers;




void KEY_Initial(void);


void SC12B_Init_Function(void);

# 112
void ICman_Init_SET(unsigned char SC_ADDR);

unsigned char I2C_SimpleRead_From_Device(unsigned char *dat8);



Complete_Status I2C_Simple_Read_From_Device(unsigned char deviceAddr,unsigned char* target,unsigned char len);
Complete_Status I2C_Read_From_Device(unsigned char deviceAddr,unsigned char REG,unsigned char* target,unsigned char len);

# 22 "hardware/src/../../hardware/inc/led.h"
void System_Init(void);


unsigned char Scan_Key(void);

# 8 "hardware/src/../../hardware/inc/run.h"
enum Signal {
TOUCH_KEY_SIG,IN_NUMBER_SIG, ZERO_SIG
};


enum State {
INPUTKEY, MODIFYPSWD, EXIT
};


typedef struct __RUN_T{



unsigned char adminiId;

unsigned char changePassword;



unsigned char userId;


unsigned char eepromAddress;
unsigned char BackLight;
unsigned char buzzer_flag;
unsigned char Numbers_counter;
unsigned char passswordsMatch;
unsigned char passsword_unlock;

# 43
}RUN_T;


RUN_T run_t;




void RunCheck_Mode(unsigned int dat);
void RunCommand_Unlock(void);




void Buzzer_Sound(void);
void BackLight_Fun(void);

# 7 "hardware/src/../../hardware/inc/ADC.h"
void ADC_Init(void);

unsigned int ADC_ReadVoltage(void);

# 12 "hardware/src/../../hardware/inc/motor.h"
void Motor_Init(void);
void Motor_CCW_Run(void);
void Motor_CW_Run(void);
void Motor_Stop(void);

# 9 "hardware/src/eeprom.c"
void EEPROM_Write_Byte(unsigned char addr,unsigned char data)
{
EEADR=addr;
EEDATA=data;

WREN=1;

EECON2=0X55;
EECON2=0XAA;
WR=1;

while(EEIF==0);

EEIF=0;
WREN=0;
}



unsigned char EEPROM_Read_Byte(unsigned char addr)
{
EEADR=addr;
RD=1;
while(RD==1);
return(EEDATA);

}

